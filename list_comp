from pprint import pprint

# colors file created from https://simple.wikipedia.org/wiki/List_of_colors

from_file = []

with open("colors.txt", 'r') as file:
    from_file = file.readlines()
    #pprint(from_file)

"""
The first section shows how do a basic list comprehension
"""


for line in from_file:
    print(line)


print("\n\n\nAbove is from standard for loop. Below is from basic list comprehension.\n\n\n")

[print(line) for line in from_file]


"""
The next section shows how to add in conditionals
"""


print("\n\n\nMoving on to standard for loop with conditional.\n\n\n")


for line in from_file:
    if "ro" in line:
        print(line)

print("\n\n\nAbove is from standard for loop with conditional. Below is from basic list comprehension with conditional.\n\n\n")

[print(line) for line in from_file if "ro" in line]


"""
The next section shows how to make a new list out of the data from the original list
"""


print("\n\n\nMoving on to list created by standard for loop with conditional.\n\n\n")

list_from_standard_loop = []

for line in from_file:
    if "ro" in line:
        list_from_standard_loop.append(line)

pprint(list_from_standard_loop)

print("\n\n\nAbove is from pprint(list_from_standard_loop). Below is from pprint(list_from_lst_comp).\n\n\n")

list_from_lst_comp = [line for line in from_file if "ro" in line]

pprint(list_from_lst_comp)

"""
The next section shows how to do nested list comprehension
"""

print("\n\n\nMoving on to list created by nested standard for loop with conditional.\n\n\n")

list_from_standard_nest_loop = []


for line in from_file:
    if "row" in line:
        for letter in line:
            list_from_standard_nest_loop.append(letter)

pprint(list_from_standard_nest_loop)

print("\n\n\nAbove is from pprint(list_from_standard_nest_loop). Below is from pprint(list_from_nest_lst_comp).\n\n\n")

list_from_nest_lst_comp = [letter for line in from_file if "row" in line for letter in line]

pprint(list_from_nest_lst_comp)


# list_of_objects = [class_name(item) for item in pre_existing_list]
